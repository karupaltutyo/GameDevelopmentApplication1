#include "bom.h"
#include "../../Utility/InputControl.h"
#include "DxLib.h"

//コンストラクタ
Bom::Bom() :animation_count(0)
{
	animation[0] = NULL;
	animation[1] = NULL;
}

//デストラクタ
Bom::~Bom()
{

}
//初期化処理
void Bom::Initialize()
{
	//画像の読み込み
	animation[0] = LoadGraph("Resource/Images/爆弾.png");

	//エラーチェック
	if (animation[0] == -1)
	{
		throw("爆弾の画像がありません\n");
	}

	//向きの設定
	radian = 360.0;

	//当たり判定の大きさを設定
	box_size = 64.0;

	//初期化処理の設定
	image = animation[0];
}

//更新処理
void Bom::Update()
{
	//移動処理
	Movement();
	//アニメーション制御
	AnimeControl();
}

//描画処理
void Bom::Draw() const
{
	//爆弾画像の描画
	DrawRotaGraphF(location.x, location.y, 1.0, radian, image, TRUE);

	//デバッグ用
#if _DEBUG
	//当たり判定の可視化
	Vector2D box_collision_upper_left = location - (box_size / 2.0f);
	Vector2D box_collision_lower_right = location + (box_size / 2.0f);

	DrawBoxAA(box_collision_upper_left.x, box_collision_upper_left.y, box_collision_lower_right.x, box_collision_lower_right.y, GetColor(255, 0, 0), FALSE);

#endif
}

//終了時処理
void Bom::Finalize()
{
	//使用した画像を解放する
	DeleteGraph(animation[0]);
}

//当たり判定通知処理
void Bom::OnHitCollision(GameObject* hit_object)
{
	//当たった時の処理
}

//移動処理
void Bom::Movement()
{
	//移動の速さ
	Vector2D velocity = 0.0f;

	//下移動
		velocity.y+= +1.0f;

	location += velocity;
}

//アニメーション制御
void Bom::AnimeControl()
{
	//フレームカウントを加算する
	animation_count++;

	//60フレーム目に到達したら
	if (animation_count >= 60)
	{
		//カウントのリセット
		animation_count = 0;

		//画像の切り替え
		if (image == animation[0])
		{
			image = animation[0];
		}
		else
		{
			image = animation[0];
		}
	}
}